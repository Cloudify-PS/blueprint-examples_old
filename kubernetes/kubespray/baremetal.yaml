tosca_definitions_version: cloudify_dsl_1_3

imports:
  - https://cloudify.co/spec/cloudify/5.1.0/types.yaml
  - plugin:cloudify-ansible-plugin?version= >=2.10.0
  - plugin:cloudify-utilities-plugin?version= >=1.25.0
  - includes/application.yaml
  - includes/kube-config.yaml

inputs:


  master_ip:
    description: >
      The ip address used for the master.
    default: { get_secret: k8s_master_ip }

  nodes_list:
    description: >
      IP addresses used for the nodes.
    default:
      - 172.16.167.156
      - 172.16.167.157
      - 172.16.167.158

  nodes_count:
    description: >
      Number of IP adresses to pop from nodes_list.
    default: 3

  agent_key_private:
    description: >
      ssh key that is able to ssh into the master and the node hosts with the agent user.
    default: { get_secret: agent_key_private }

  agent_user:
    description: >
      The username of the agent running on the instance created from the image.
    default: 'centos'

node_types:

  k8s-cluster:
    derived_from: cloudify.nodes.Compute
    properties:  &k8s-cluster-prop
      agent_config:
        default:
          install_method: none
          user: { get_input: agent_user }
          port: 22
          key: { get_input: agent_key_private }

  kube-master:
    derived_from: cloudify.nodes.Compute
    properties: *k8s-cluster-prop

  kube-node:
    derived_from: cloudify.nodes.Compute
    properties: *k8s-cluster-prop
    interfaces:
      cloudify.interfaces.lifecycle:
        create: resources.cloudify_resources.tasks.create_list_item
        start:
          implementation: scripts/assign_ip.py
          executor: central_deployment_agent
        delete: resources.cloudify_resources.tasks.delete_list_item

node_templates:

  resources:
    type: cloudify.nodes.resources.List
    properties:
      resource_config: { get_input: nodes_list }
    capabilities:
      scalable:
        properties:
          min_instances: 1
          max_instances: 1

  kube-master:
    type: kube-master
    properties:
      ip: { get_input: master_ip }

  kube-node:
    type: kube-node
    relationships:
      - type: cloudify.relationships.resources.reserve_list_item
        target: resources

groups:

  kube-master-group:
    members:
    - kube-master

  kube-node-group:
    members:
    - kube-node

policies:

  kube-master-policy:
    type: cloudify.policies.scaling
    properties:
      default_instances: 1
    targets: [kube-master-group]

  kube-node-policy:
    type: cloudify.policies.scaling
    properties:
      default_instances: { get_input: nodes_count }
    targets: [kube-node-group]
