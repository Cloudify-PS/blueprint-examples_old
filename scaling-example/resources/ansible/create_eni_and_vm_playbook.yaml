- hosts: all
  connection: local
  vars:
#    vpc_name: "Cloudify_virtual_machine_example_vpc_{{ resource_suffix }}"
#    subnet_name: "Cloudify_virtual_machine_example_subnet_{{ resource_suffix }}"
#    security_group_name: "Cloudify_virtual_machine_example_sg_{{ resource_suffix }}"
#    igw_name: "Cloudify_virtual_machine_example_igw_{{ resource_suffix }}"
    eip_name: "Cloudify_virtual_machine_example_eip_{{ resource_suffix }}"
    vm_name: "Cloudify_virtual_machine_example_instance_{{ resource_suffix }}"
    count: 1

  tasks:

    - name: Create elastic network interface
      ec2_eni:
        subnet_id: "{{ vpc_subnet_id }}"
        security_groups:
          - "{{ security_group_id }}"
      register: create_eni

    - name: "Set fact: eni_id"
      set_fact:
        eni_id: "{{ create_eni.interface.id }}"

    - name: Find ami instance-id for centos 7.7
      ec2_ami_info:
        filters:
          name: "{{ami_name_filter}}"
          owner-id: "{{ ami_owner_filter }}"
      register: AMIs

    - name: "Set fact: ami_id"
      set_fact:
        ami_id:  "{{ AMIs.images[0]['image_id']}}"

    - name: Create elastic ip
      ec2_eip:
        device_id: "{{ eni_id }}"
        in_vpc: yes
        public_ipv4_pool: yes
#        TODO:genrate it randomally  or check if we can create 2 ips with same tag name
        tag_name: Name
        tag_value: "{{ eip_name }}"
        release_on_disassociation: yes
      register: eip

    - name: "Set fact: public ip"
      set_fact:
        public_ip:  "{{ eip.public_ip }}"

    - name: Launch EC2 Instance
      ec2:
        instance_type: "{{ instance_type }}"
        image: "{{ ami_id }}"
        wait: true
        user_data: "{{ ec2_instance_user_data }}"
        count: "{{count}}"
        network_interfaces:
          - "{{ eni_id }}"
        instance_tags:
          Name: "{{ vm_name }}"
      register: ec2

    - name: Sleep 90 seconds for initializing the vm.
      wait_for:
        timeout: 90
      delegate_to: localhost

    - name: "Set fact: output dictionary"
      set_fact:
        output_dict:
          public_ip:  "{{ public_ip }}"
          ec2_instance_ids: "{{ ec2.instance_ids}}"
#          vpc_id: "{{ vpc_id }}"
#          vpc_name: "{{ vpc_name }}"
#          subnet_id: "{{ vpc_subnet_id }}"
#          security_group_id: "{{ security_group_id }}"
#          internet_gateway_id: "{{internet_gateway_id}}"
          eni_id: "{{ eni_id }}"
#          route_table_id: "{{route_table_id}}"

#    - name: Create /tmp/virtual-machine-example-vars.json
#      file:
#        name: '/tmp/virtual-machine-example-varss.json'
#        state: touch
#
#    - name: Write variables to /tmp/virtual-machine-example-vars.json
#      copy:
#        content: "{{ output_dict | to_nice_json }}"
#        dest: "/tmp/virtual-machine-example-varss.json"